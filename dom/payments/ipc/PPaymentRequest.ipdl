/* -*- Mode: C++; c-basic-offset: 2; indent-tabs-mode: nil; tab-width: 8 -*- */
/* vim: set sw=4 ts=8 et tw=80 ft=cpp : */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PContent;

using mozilla::dom::TabId from "mozilla/dom/ipc/IdType.h";

namespace mozilla {
namespace dom {

struct IPCPaymentMethodData
{
  nsString[] supportedMethods;
  nsString data;
};

struct IPCPaymentCurrencyAmount
{
  nsString currency;
  nsString value;
};

struct IPCPaymentItem
{
  nsString label;
  IPCPaymentCurrencyAmount amount;
  bool pending;
};

struct IPCPaymentDetailsModifier
{
  nsString[] supportedMethods;
  IPCPaymentItem total;
  IPCPaymentItem[] additionalDisplayItems;
  nsString data;
  bool additionalDisplayItemsPassed;
};

struct IPCPaymentShippingOption
{
  nsString id;
  nsString label;
  IPCPaymentCurrencyAmount amount;
  bool selected;
};

struct IPCPaymentDetails
{
  nsString id;
  IPCPaymentItem total;
  IPCPaymentItem[] displayItems;
  IPCPaymentShippingOption[] shippingOptions;
  IPCPaymentDetailsModifier[] modifiers;
  nsString error;
  bool displayItemsPassed;
  bool shippingOptionsPassed;
  bool modifiersPassed;
};

struct IPCPaymentOptions
{
  bool requestPayerName;
  bool requestPayerEmail;
  bool requestPayerPhone;
  bool requestShipping;
  nsString shippingType;
};

struct PaymentRequestCreateRequest
{
  TabId tabId;
  nsString requestId;
  IPCPaymentMethodData[] methodData;
  IPCPaymentDetails details;
  IPCPaymentOptions options;
};

struct PaymentRequestShowRequest
{
  nsString requestId;
};

struct PaymentRequestAbortRequest
{
  nsString requestId;
};

struct PaymentRequestCanMakeRequest
{
  nsString requestId;
};

struct PaymentRequestUpdateRequest
{
  nsString requestId;
  IPCPaymentDetails details;
};

struct PaymentRequestCompleteRequest
{
  nsString requestId;
  nsString completeStatus;
};

union PaymentRequestRequest
{
  PaymentRequestCreateRequest;
  PaymentRequestShowRequest;
  PaymentRequestAbortRequest;
  PaymentRequestCanMakeRequest;
  PaymentRequestUpdateRequest;
  PaymentRequestCompleteRequest;
};

struct PaymentRequestCanMakeResponse
{
  nsString requestId;
  bool result;
};

struct PaymentRequestAbortResponse
{
  nsString requestId;
  bool isSucceeded;
};

struct PaymentRequestShowResponse
{
  nsString requestId;
  bool     isAccepted;
  nsString methodName;
  nsString data;
  nsString payerName;
  nsString payerEmail;
  nsString payerPhone;
};

struct PaymentRequestCompleteResponse
{
  nsString requestId;
  bool isCompleted;
};

union PaymentRequestResponse
{
  PaymentRequestCanMakeResponse;
  PaymentRequestAbortResponse;
  PaymentRequestShowResponse;
  PaymentRequestCompleteResponse;
};

struct IPCPaymentAddress
{
  nsString country;
  nsString[] addressLine;
  nsString region;
  nsString city;
  nsString dependentLocality;
  nsString postalCode;
  nsString sortingCode;
  nsString languageCode;
  nsString organization;
  nsString recipient;
  nsString phone;
};

sync protocol PPaymentRequest
{
  manager PContent;

parent:
  async __delete__();

  async RequestPayment(PaymentRequestRequest request);

child:
  async RespondPayment(PaymentRequestResponse response);

  async ChangeShippingAddress(nsString requestId,
                              IPCPaymentAddress address);

  async ChangeShippingOption(nsString requestId,
                             nsString option);
};

} // end of namespace dom
} // end of namespace mozilla
